package com.seitenbau.testdatadsl.dbunitdemo.groovyimport org.dbunit.dataset.DataSetException;import org.dbunit.dataset.IDataSet;import com.seitenbau.testdatadsl.dbunitdemo.IDataSetProviderimport com.seitenbau.testdatadsl.dbunitdemo.sbtesting.groovy.DBUnitExamplesParserimport com.seitenbau.testdatadsl.dbunitdemo.sbtesting.groovy.LehrveranstaltungRefimport com.seitenbau.testdatadsl.dbunitdemo.sbtesting.groovy.ProfessorRefimport com.seitenbau.testdatadsl.dbunitdemo.sbtesting.groovy.PruefungRefimport com.seitenbau.testdatadsl.dbunitdemo.sbtesting.groovy.StudentRefimport static com.seitenbau.testdatadsl.dbunitdemo.groovy.DemoRefs.*
class GroovyOpOverloadingDataSetProvider implements IDataSetProvider{  IDataSet dataset    def GroovyOpOverloadingDataSetProvider() {    DBUnitExamplesParser hochschule = new DBUnitExamplesParser()    hochschule.tables {          professorTable.rows {        REF    | id | name    | vorname  | titel            | fakultaet        WAESCH | 1  | "Wäsch" | "Jürgen" | "Prof. Dr.-Ing." | "Informatik"        HAASE  | 2  | "Haase" | "Oliver" | "Prof. Dr."      | "Informatik"      }          lehrveranstaltungTable.rows {        REF       | name                | sws | ects | professor        VSYS      | "Verteilte Systeme" | 4   | 5    | HAASE        DPATTERNS | "Design Patterns"   | 4   | 3    | HAASE      }          pruefungTable.rows {        REF         | lehrveranstaltung | typ   | zeitpunkt        P_VSYS      | VSYS              | "K90" | DateUtil.getDate(2013, 4, 1, 14, 0, 0)        P_DPATTERNS | DPATTERNS         | "M30" | DateUtil.getDate(2013, 1, 6, 12, 0, 0)      }          studentTable.rows {        REF        | name         | vorname    | studiengang | semester | immatrikuliert_seit        MOLL       | "Moll"       | "Nikolaus" | "MSI"       | 4        | DateUtil.getDate(2011, 9, 1)        MUSTERMANN | "Mustermann" | "Max"      | "BIT"       | 3        | DateUtil.getDate(2012, 3, 1)      }          beaufsichtigtTable.rows {        professor | pruefung        WAESCH    | P_VSYS        HAASE     | P_DPATTERNS      }          besuchtTable.rows {        student    | lehrveranstaltung        MOLL       | VSYS        MUSTERMANN | DPATTERNS      }          isttutorTable.rows {        student    | lehrveranstaltung        MOLL       | VSYS      }          schreibtTable.rows {        student    | pruefung        MOLL       | P_VSYS      }    }    dataset = hochschule.createDataSet()  }    public IDataSet getDataSet() throws DataSetException  {    dataset  }

}
